{"version":3,"sources":["../../../src/@ionic-native/plugins/admob-pro/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\nexport type AdSize =\n  | 'SMART_BANNER'\n  | 'BANNER'\n  | 'MEDIUM_RECTANGLE'\n  | 'FULL_BANNER'\n  | 'LEADERBOARD'\n  | 'SKYSCRAPER'\n  | 'CUSTOM';\n\nexport interface AdMobOptions {\n  /**\n   * Banner ad ID\n   */\n  adId?: string;\n\n  /**\n   * Banner Ad Size, defaults to `SMART_BANNER`. IT can be: `SMART_BANNER`, `BANNER`, `MEDIUM_RECTANGLE`, `FULL_BANNER`, `LEADERBOARD`, `SKYSCRAPER`, or `CUSTOM`\n   */\n  adSize?: AdSize;\n\n  /**\n   * Banner width, valid when `adSize` is set to `CUSTOM`\n   */\n  width?: number;\n\n  /**\n   * Banner height, valid when `adSize` is set to `CUSTOM`\n   */\n  height?: number;\n\n  /**\n   * Allow banner to overlap webview, or else it will push webview up or down to avoid overlap. Defaults to false.\n   */\n  overlap?: boolean;\n\n  /**\n   * Position of banner ad. Defaults to `TOP_CENTER`. You can use the `AdMobPro.AD_POSITION` property to select other values.\n   */\n  position?: number;\n\n  /**\n   * X in pixels. Valid when `position` is set to `POS_XY`\n   */\n  x?: number;\n\n  /**\n   * Y in pixels. Valid when `position` is set to `POS_XY`\n   */\n  y?: number;\n\n  /**\n   * Set to true to receive test ad for testing purposes\n   */\n  isTesting?: boolean;\n\n  /**\n   * Auto show interstitial ad when loaded. Set to false if hope to control the show timing with prepareInterstitial/showInterstitial\n   */\n  autoShow?: boolean;\n\n  /**\n   * Re-create the banner on web view orientation change (not screen orientation), or else just move the banner. Default:true.\n   */\n  orientationRenew?: boolean;\n\n  /**\n   * Set extra color style for Ad\n   */\n  adExtras?: AdExtras;\n\n  /**\n   * License key for the plugin\n   */\n  license?: any;\n\n  /**\n   * Set offset\n   */\n  offsetTopBar?: boolean;\n}\n\nexport interface AdExtras {\n  color_bg: string;\n\n  color_bg_top: string;\n\n  color_border: string;\n\n  color_link: string;\n\n  color_text: string;\n\n  color_url: string;\n}\n\n/**\n * @paid\n * @name AdMob Pro\n * @description\n * Plugin for Google Ads, including AdMob / DFP (DoubleClick for publisher) and mediations to other Ad networks.\n *\n * IMPORTANT NOTICE: this plugin takes a percentage out of your earnings if you profit more than $1,000. Read more about this on the plugin's repo. For a completely free alternative, see [AdMobPro Free](../admob-free).\n * @usage\n * ```typescript\n * import { AdMobPro } from '@ionic-native/admob-pro';\n * import { Platform } from 'ionic-angular';\n *\n * constructor(private admob: AdMobPro, private platform: Platform ) { }\n *\n * ionViewDidLoad() {\n *   this.admob.onAdDismiss()\n *     .subscribe(() => { console.log('User dismissed ad'); });\n * }\n *\n * onClick() {\n *   let adId;\n *   if(this.platform.is('android')) {\n *     adId = 'YOUR_ADID_ANDROID';\n *   } else if (this.platform.is('ios')) {\n *     adId = 'YOUR_ADID_IOS';\n *   }\n *   this.admob.prepareInterstitial({adId: adId})\n *     .then(() => { this.admob.showInterstitial(); });\n * }\n *\n * ```\n *\n * @interfaces\n * AdMobOptions\n * AdExtras\n */\n@Plugin({\n  pluginName: 'AdMob Pro',\n  plugin: 'cordova-plugin-admobpro',\n  pluginRef: 'AdMob',\n  repo: 'https://github.com/floatinghotpot/cordova-admob-pro',\n  platforms: ['Android', 'iOS', 'Windows Phone 8']\n})\n\nexport class AdMobPro extends IonicNativePlugin {\n  AD_POSITION: {\n    NO_CHANGE: number;\n    TOP_LEFT: number;\n    TOP_CENTER: number;\n    TOP_RIGHT: number;\n    LEFT: number;\n    CENTER: number;\n    RIGHT: number;\n    BOTTOM_LEFT: number;\n    BOTTOM_CENTER: number;\n    BOTTOM_RIGHT: number;\n    POS_XY: number;\n  } = {\n    NO_CHANGE: 0,\n    TOP_LEFT: 1,\n    TOP_CENTER: 2,\n    TOP_RIGHT: 3,\n    LEFT: 4,\n    CENTER: 5,\n    RIGHT: 6,\n    BOTTOM_LEFT: 7,\n    BOTTOM_CENTER: 8,\n    BOTTOM_RIGHT: 9,\n    POS_XY: 10\n  };\n\n  /**\n   * Create a banner\n   * @param {string | AdMobOptions} adIdOrOptions Ad ID or Options\n   * @returns {Promise<any>} Returns a Promise that resolves when the banner is created\n   */\n  @Cordova()\n  createBanner(adIdOrOptions: string | AdMobOptions): Promise<any> {\n    return;\n  }\n\n  /**\n   * Destroy the banner, remove it from screen.\n   */\n  @Cordova({\n    sync: true\n  })\n  removeBanner(): void {}\n\n  /**\n   * Show banner at position\n   * @param {number} position Position. Use `AdMobPro.AD_POSITION` to set values.\n   */\n  @Cordova({\n    sync: true\n  })\n  showBanner(position: number): void {}\n\n  /**\n   * Show banner at custom position\n   * @param {number} x Offset from screen left.\n   * @param {number} y Offset from screen top.\n   */\n  @Cordova({\n    sync: true\n  })\n  showBannerAtXY(x: number, y: number): void {}\n\n  /**\n   * Hide the banner, remove it from screen, but can show it later\n   */\n  @Cordova({\n    sync: true\n  })\n  hideBanner(): void {}\n\n  /**\n   * Prepare interstitial banner\n   * @param {string | AdMobOptions} adIdOrOptions Ad ID or Options\n   * @returns {Promise<any>} Returns a Promise that resolves when interstitial is prepared\n   */\n  @Cordova()\n  prepareInterstitial(adIdOrOptions: string | AdMobOptions): Promise<any> {\n    return;\n  }\n\n  /**\n   * Show interstitial ad when it's ready\n   */\n  @Cordova({\n    sync: true\n  })\n  showInterstitial(): void {}\n\n  /**\n   * Prepare a reward video ad\n   * @param {string | AdMobOptions} adIdOrOptions Ad ID or Options\n   * @returns {Promise<any>} Returns a Promise that resolves when the ad is prepared\n   */\n  @Cordova()\n  prepareRewardVideoAd(adIdOrOptions: string | AdMobOptions): Promise<any> {\n    return;\n  }\n\n  /**\n   * Show a reward video ad\n   */\n  @Cordova({\n    sync: true\n  })\n  showRewardVideoAd(): void {}\n\n  /**\n   * Sets the values for configuration and targeting\n   * @param {AdMobOptions} options Options\n   * @returns {Promise<any>} Returns a Promise that resolves when the options have been set\n   */\n  @Cordova()\n  setOptions(options: AdMobOptions): Promise<any> {\n    return;\n  }\n\n  /**\n   * Get user ad settings\n   * @returns {Promise<any>} Returns a promise that resolves with the ad settings\n   */\n  @Cordova()\n  getAdSettings(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Triggered when failed to receive Ad\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    eventObservable: true,\n    event: 'onAdFailLoad',\n    element: document\n  })\n  onAdFailLoad(): Observable<any> {\n    return;\n  }\n\n  /**\n   * Triggered when Ad received\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    eventObservable: true,\n    event: 'onAdLoaded',\n    element: document\n  })\n  onAdLoaded(): Observable<any> {\n    return;\n  }\n\n  /**\n   * Triggered when Ad will be showed on screen\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    eventObservable: true,\n    event: 'onAdPresent',\n    element: document\n  })\n  onAdPresent(): Observable<any> {\n    return;\n  }\n\n  /**\n   * Triggered when user click the Ad, and will jump out of your App\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    eventObservable: true,\n    event: 'onAdLeaveApp',\n    element: document\n  })\n  onAdLeaveApp(): Observable<any> {\n    return;\n  }\n\n  /**\n   * Triggered when dismiss the Ad and back to your App\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    eventObservable: true,\n    event: 'onAdDismiss',\n    element: document\n  })\n  onAdDismiss(): Observable<any> {\n    return;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}