{"version":3,"sources":["../../../src/@ionic-native/plugins/document-picker/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;;;GAoBG;AASH;IAAoC,kCAAiB;IAArD;;IAgBA,CAAC;IAfC;;;;OAIG;IAEH,gCAAO,GAAP,UAAQ,MAAe;QACrB,MAAM,CAAC;IACT,CAAC;IACI,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IARA;QADC,OAAO,EAAE;;;;iDAGT;IATU,cAAc;QAR1B,MAAM,CAAC;YACN,UAAU,EAAE,mBAAmB;YAC/B,MAAM,EAAE,8CAA8C;YACtD,SAAS,EAAE,gBAAgB;YAC3B,IAAI,EAAE,kDAAkD;YACxD,SAAS,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC;OAEW,cAAc,CAgB1B;IAAD,qBAAC;CAhBD,AAgBC,CAhBmC,iBAAiB,GAgBpD;SAhBY,cAAc","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name iOS DocumentPicker\n * @description\n *\n * Opens the file picker on iOS for the user to select a file, returns a file URI.\n * Allows the user to upload files from iCloud\n *\n * @usage\n * ```typescript\n * import { IOSDocumentPicker } from '@ionic-native/document-picker';\n *\n * constructor(private docPicker: IOSDocumentPicker) { }\n *\n * ...\n *\n * this.docPicker.getFile('all')\n *   .then(uri => console.log(uri))\n *   .catch(e => console.log(e));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'IOSDocumentPicker',\n  plugin: 'cordova-plugin-documentpicker.DocumentPicker',\n  pluginRef: 'DocumentPicker',\n  repo: 'https://github.com/iampossible/Cordova-DocPicker',\n  platforms: ['iOS']\n})\n\nexport class DocumentPicker extends IonicNativePlugin {\n  /**\n   * Open a file\n   * @param {string} [option] files between 'image', 'pdf' or 'all'\n   * @returns {Promise<string>}\n   */\n  @Cordova()\n  getFile(option?: string): Promise<string> {\n    return;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}