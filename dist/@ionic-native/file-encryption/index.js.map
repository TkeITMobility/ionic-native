{"version":3,"sources":["../../../src/@ionic-native/plugins/file-encryption/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,iBAAA,EAAmB,MAAA,EAAO,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;;GAmBG;AASH;IAAoC,kCAAiB;IAArD;;IA4BA,CAAC;IA3BC;;;;;OAKG;IAEH,gCAAO,GAAP,UAAQ,IAAY,EAAE,GAAW;QAC/B,MAAM,CAAC;IACT,CAAC;IAED;;;;;OAKG;IAEH,gCAAO,GAAP,UAAQ,IAAY,EAAE,GAAW;QAC/B,MAAM,CAAC;IACT,CAAC;IACI,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAnBA;QADC,OAAO,EAAE;;;;iDAGT;IASD;QADC,OAAO,EAAE;;;;iDAGT;IArBU,cAAc;QAR1B,MAAM,CAAC;YACN,UAAU,EAAE,gBAAgB;YAC5B,MAAM,EAAE,cAAc;YACtB,SAAS,EAAE,2BAA2B;YACtC,IAAI,EAAE,2CAA2C;YACjD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,cAAc,CA4B1B;IAAD,qBAAC;CA5BD,AA4BC,CA5BmC,iBAAiB,GA4BpD;SA5BY,cAAc","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @name File Encryption\n * @description\n * Simple file encryption for Cordova.\n *\n * @usage\n * ```typescript\n * import { FileEncryption } from '@ionic-native/file-encryption';\n *\n *\n * constructor(private fileEncryption: FileEncryption) { }\n *\n * ...\n *\n * this.fileEncryption.decrypt('assets/json/topSecret.json', 'secretKey');\n *\n * this.fileEncryption.encrypt('assets/json/topSecret.json', 'secretKey');\n *\n * ```\n */\n@Plugin({\n  pluginName: 'FileEncryption',\n  plugin: 'cordova-safe',\n  pluginRef: 'cordova.plugins.disusered',\n  repo: 'https://github.com/disusered/cordova-safe',\n  platforms: ['Android', 'iOS']\n})\n\nexport class FileEncryption extends IonicNativePlugin {\n  /**\n   * Encrypt a file\n   * @param {string} file A string representing a local URI\n   * @param {string} key A key for the crypto operations\n   * @return {Promise<any>} Returns a promise that resolves when something happens\n   */\n  @Cordova()\n  encrypt(file: string, key: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Decrypt a file\n   * @param {string} file A string representing a local URI\n   * @param {string} key A key for the crypto operations\n   * @return {Promise<any>} Returns a promise that resolves when something happens\n   */\n  @Cordova()\n  decrypt(file: string, key: string): Promise<any> {\n    return;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}