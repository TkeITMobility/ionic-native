{"version":3,"sources":["../../../src/@ionic-native/plugins/blinkup/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,iBAAA,CAAkB;AAC7C,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AA+B3C;;;;;;;;;;;;;;;;;;;;GAoBG;AASH;IAA6B,2BAAiB;IAA9C;;IAyDA,CAAC;IAxDC;;;;OAIG;IAKH,8BAAY,GAAZ,UAAa,OAAuB,IAAqB,MAAM,CAAC,CAAC,CAAC;IAElE;;;;OAIG;IAKH,kCAAgB,GAAhB,UAAiB,OAA2B,IAAqB,MAAM,CAAC,CAAC,CAAC;IAE1E;;;;OAIG;IAKH,iCAAe,GAAf,UAAgB,OAA0B,IAAqB,MAAM,CAAC,CAAC,CAAC;IAExE;;;OAGG;IAIH,8BAAY,GAAZ,cAAkC,MAAM,CAAC,CAAC,CAAC;IAE3C;;;OAGG;IAIH,kCAAgB,GAAhB,cAAsC,MAAM,CAAC,CAAC,CAAC;IAC1C,kBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,sBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IA9CA;QAJC,OAAO,CAAC;YACP,aAAa,EAAE,SAAS;YACxB,UAAU,EAAE,IAAI;SACjB,CAAC;;;wCACqC,UAAU;+CAAiB;IAWlE;QAJC,OAAO,CAAC;YACP,aAAa,EAAE,SAAS;YACxB,UAAU,EAAE,IAAI;SACjB,CAAC;;;wCAC6C,UAAU;mDAAiB;IAW1E;QAJC,OAAO,CAAC;YACP,aAAa,EAAE,SAAS;YACxB,UAAU,EAAE,IAAI;SACjB,CAAC;;;wCAC2C,UAAU;kDAAiB;IASxE;QAHC,OAAO,CAAC;YACP,UAAU,EAAE,IAAI;SACjB,CAAC;;;wCACc,UAAU;+CAAiB;IAS3C;QAHC,OAAO,CAAC;YACP,UAAU,EAAE,IAAI;SACjB,CAAC;;;wCACkB,UAAU;mDAAiB;IAlDpC,OAAO;QARnB,MAAM,CAAC;YACN,UAAU,EAAE,SAAS;YACrB,MAAM,EAAE,wBAAwB;YAChC,SAAS,EAAE,SAAS;YACpB,IAAI,EAAE,uDAAuD;YAC7D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,OAAO,CAyDnB;IAAD,cAAC;CAzDD,AAyDC,CAzD4B,iBAAiB,GAyD7C;SAzDY,OAAO","file":"index.js","sourceRoot":"","sourcesContent":["import { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Injectable } from '@angular/core';\n\n/**\n * Interface of a blink up options.\n */\nexport interface BlinkUpOptions {\n  apiKey: string;\n  developmentPlanId?: string;\n  isInDevelopment?: boolean;\n  timeoutMs?: number;\n}\n\n/**\n * Interface of a blink up wifi options.\n */\nexport interface BlinkUpWifiOptions {\n  apiKey: string;\n  timeoutMs?: number;\n  ssid: string;\n  password: string;\n}\n\n/**\n * Interface of a blink up wps options.\n */\nexport interface BlinkUpWPSOptions {\n  apiKey: string;\n  timeoutMs?: number;\n  wpsPin: string;\n}\n\n/**\n * @name BlinkUp\n * @description\n * Electric Imp BlinkUp ionic plugin.\n *\n * @usage\n * ```typescript\n * import { BlinkUp } from '@ionic-native/blinkup';\n *\n * const options = <BlinkUpWifiOptions>{\n *    apiKey: 'API_KEY',\n *    timeoutMs: 60000,\n *    ssid: 'MY_SSID',\n *    password: 'MY_PASSWORD'\n *  }\n *  BlinkUp.flashWifiBlinkUp(options).subscribe(\n *     (result) => console.log('Done'),\n *     (error) => console.log(error)\n *   )\n * ```\n */\n@Plugin({\n  pluginName: 'BlinkUp',\n  plugin: 'cordova-plugin-blinkup',\n  pluginRef: 'blinkup',\n  repo: 'https://github.com/SensorShare/cordova-plugin-blinkup',\n  platforms: ['Android', 'iOS']\n})\n\nexport class BlinkUp extends IonicNativePlugin {\n  /**\n   * startBlinkUp - starts the blinkup process\n   * @param {module:blinkup.BlinkUpOptions} options BlinkUp Options\n   * @return {Observable<any>} Returns an Observable\n   */\n  @Cordova({\n    callbackOrder: 'reverse',\n    observable: true\n  })\n  startBlinkUp(options: BlinkUpOptions): Observable<any> { return; }\n\n  /**\n   * flashWifiBlinkUp - invokes the flash wifi process\n   * @param {module:blinkup.BlinkUpWifiOptions} options BlinkUp Wifi Options\n   * @return {Observable<any>} Returns an Observable\n   */\n  @Cordova({\n    callbackOrder: 'reverse',\n    observable: true\n  })\n  flashWifiBlinkUp(options: BlinkUpWifiOptions): Observable<any> { return; }\n\n  /**\n   * flashWPSBlinkUp - invokes the flash wps process\n   * @param {module:blinkup.BlinkUpWPSOptions} options BlinkUp WPS Options\n   * @return {Observable<any>} Returns an Observable\n   */\n  @Cordova({\n    callbackOrder: 'reverse',\n    observable: true\n  })\n  flashWPSBlinkUp(options: BlinkUpWPSOptions): Observable<any> { return; }\n\n  /**\n   * abortBlinkUp - abort blinkup process\n   * @return {Observable<any>} Returns an Observable\n   */\n  @Cordova({\n    observable: true\n  })\n  abortBlinkUp(): Observable<any> { return; }\n\n  /**\n   * clearBlinkUpData - clear wifi data\n   * @return {Observable<any>} Returns an Observable\n   */\n  @Cordova({\n    observable: true\n  })\n  clearBlinkUpData(): Observable<any> { return; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}